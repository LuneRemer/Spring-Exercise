Connection Test between Database and Spring use Java and JDBC driver. 
(import java.sql.Connection, import java.sql.DriverManager)

Connection Pool 설정
-여러명의 사용자를 동시에 처리해야 하는 웹 애플리케이션의 경우 데이터베이스 연결을 이용할 때는 'Connection Pool'을 이용함( Log-in 등의 목적인경우, 등등)
-스프링에 'Connection Pool'을 등록해서 사용
-Java에서는 DataSource라는 Interface를 통해서 'Connection Pool'을 사용함.
-DataSource를 통해 매번 데이터베이스와 연결하는 방식이 아니라, 미리 연결을 맺어주고 반환하는 구조를 이용함.

'Connection Pool'의 종류
- spring-jdbc 라이브러리 이용
OR
- HikariCP(https://github.com/brettwooldridge/HikariCP) 이용

'HikariCP'
- pom.xml 의 dependency 에 HikariCP를 추가
- root-context.xml 에서 <bean> 태그를 정의한 후 <property> 추가해서 사용.
- 자세한 내용은 프로젝트의 pom.xml 과 root-context.xml 참조

<mybatis-spring:scan> 태그의 base-package 속성은 지정된 패키지의 모든 MyBatis 관련 Annotation을 찾아서 처리함.

'Mapper interface'

'Mapper 설정'
- root-context.xml의 Namespaces 항목에서 mybatis-spring 탭 선택
- <mybatis-spring:scan> 을 root-context.xml에 추가

TimeMapperTests 클래스가 정상적으로 돌아간다면 스프링 내부에는 TimeMapper 타입으로 만들어진 스프링 객체(빈)이 존재한다는 뜻이다. 

'XML Mapper와 같이 쓰기'
- MyBatis를 이용해서 SQL을 처리할 때 Annotation을 이용하는 방식은 SQL 구문이 복잡하거나 길어지는 경우에는 Annotation 보다는 XML을 이용하는것이 더 편리하다.(mybatis-spring의 경우, Mapper Interface와 XML을 동시에 이용할 수 있다.

'XML을 이용하는 방법(sql)'
- XML 파일의 위치와 XML 파일에 지정하는 namespace 속성이 매우 중요함.
- XML 파일 위치의 경우 Mapper Interface가 있는 곳에 같이 작성 OR src/main/resources 구조에 XML을 저장할 폴더를 생성할 수 있음.(프로젝트 참조)
- XML 파일에는 MyBatis의 XML Mapper에서 사용하는 태그에 대한 설정이 필요.
- MyBatis는 Mapper Interface와 XML을 Interface의 이름과 namespace 속성값을 가지고 판단함( 그래서 XML Mapper를 이용할때는 <mapper> 태그의 namespace 속성값에 각별히 신경을 써야한다.)
- <select> 태그의 id 송석의 값은 Method의 이름과 동일하게 맞추어야 한다.
- <select> 태그의 경우 resultType 속성을 가지는데 이 값은 Interface에 선언된 Method의 리턴 타입과 동일하게 작성해야 함.
- (More Info : http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html)

'MVC Project'
- Java area(Using root-context.xml) + Web area(Using servlet-context.xml)

'Explanation about .xml'
web.xml - Setting related to Tomcat execution
root-context.xml - Setting realted to Spring 
servlet-context.xml - Settomg re;ated tp Spring






